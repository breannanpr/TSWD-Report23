write.csv(merged_data, "merged_data.csv")
write.csv(mergeddat, "merged_data.csv")
#merge data
mergeddat = merge(mcesdat,destdat, by = "Client.ID", all.x = TRUE)
# read in datasets
mcesdat = read.csv("mces_data20231122.csv")
setwd("C:/Users/breni/OneDrive/Documents/GitHub/TSWD-Report23/citydat")
# read in datasets
mcesdat = read.csv("mces_data20231122.csv")
destdat = read.csv("destination_data20231122.csv")
surveydat = read.csv("survey_data20231122.csv")
solutionfunddat = read.csv("solutions_fund20231122.csv")
#merge data
mergeddat = merge(mcesdat,destdat, by = "Client.ID", all.x = TRUE)
write.csv(mergeddat, "merged_data.csv")
View(mergeddat)
View(destdat)
cleandestdat = destdat %>%
filter(!is.na(Entry.Date) & is.na(Exit.Date))
cleandestdat = destdat %>%
filter(!is.na(Entry.Date) & is.na(Exit.Date))
#Exploring housing destinations and rapidity of housing allocation for veterans.
library(dplyr)
#Exploring housing destinations and rapidity of housing allocation for veterans.
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
cleandestdat = destdat %>%
filter(!is.na(Entry.Date) & is.na(Exit.Date))
housingdests = cleandestdat %>%
group_by(cleandestdat$Veteran, cleandestdat$Entry.Exit.Destination) %>%
summarise(AvgDaysToExit = mean(cleandestdat$Days.to.Exit.Destination, na.rm = TRUE))
ggplot(housingdests,
aes(x = cleandestdat$Entry.Exit.Destination
y = AvgDaysToExit,
ggplot(housingdests,
aes(x = cleandestdat$Entry.Exit.Destination,
y = AvgDaysToExit,
fill = as.factor(cleandestdat$Veteran))) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Housing Destinations and Rapidity for Veterans",
x = "Entry/Exit Destination",
y = "Average Days to Exit") +
theme_minimal()
housingdests = cleandestdat %>%
group_by(cleandestdat$Veteran, cleandestdat$Entry.Exit.Destination) %>%
summarise(AvgDaysToExit = mean(cleandestdat$Days.to.Exit.Destination, na.rm = TRUE))
ggplot(housingdests,
aes(x = cleandestdat$Entry.Exit.Destination,
y = AvgDaysToExit,
fill = as.factor(cleandestdat$Veteran))) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Housing Destinations and Rapidity for Veterans",
x = "Entry/Exit Destination",
y = "Average Days to Exit") +
theme_minimal()
View(housingdests)
cleandestdat = destdat %>%
filter(!is.na(Entry.Date) & is.na(Exit.Date))
housingdests = cleandestdat %>%
group_by(housingdests$Veteran, housingdests$Entry.Exit.Destination) %>%
summarise(AvgDaysToExit = mean(housingdests$Days.to.Exit.Destination, na.rm = TRUE))
ggplot(housingdests,
aes(x = housingdests$Entry.Exit.Destination,
y = AvgDaysToExit,
fill = as.factor(housingdests$Veteran))) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Housing Destinations and Rapidity for Veterans",
x = "Entry/Exit Destination",
y = "Average Days to Exit") +
theme_minimal()
housingdests = cleandestdat %>%
group_by('Veteran', 'Entry.Exit.Destination') %>%
summarise(AvgDaysToExit = mean('Days.to.Exit.Destination', na.rm = TRUE))
#Exploring housing destinations and rapidity of housing allocation for veterans.
library(dplyr)
library(ggplot2)
cleandestdat = destdat %>%
filter(!is.na(Entry.Date) & is.na(Exit.Date))
housingdests = cleandestdat %>%
group_by('Veteran', 'Entry.Exit.Destination') %>%
summarise(AvgDaysToExit = mean('Days.to.Exit.Destination', na.rm = TRUE))
View(destdat)
housingdests = cleandestdat %>%
group_by('Veteran') %>%
summarise(AvgDaysToExit = mean('Days.to.Exit.Destination', na.rm = TRUE))
mcesdat = read.csv("mces_data20231122.csv")
destdat = read.csv("destination_data20231122.csv")
surveydat = read.csv("survey_data20231122.csv")
solutionfunddat = read.csv("solutions_fund20231122.csv")
# read in datasets
mcesdat = read.csv("mces_data20231122.csv")
destdat = read.csv("destination_data20231122.csv")
surveydat = read.csv("survey_data20231122.csv")
solutionfunddat = read.csv("solutions_fund20231122.csv")
# Exploring housing destinations and rapidity of housing allocation for veterans.
veterandat = mcesdat[mcesdat$U.S..Military.Veteran == "Yes", ]
# Analyze housing destinations
housingdests = table(veterandat$'Entry.Exit.Destination')
# Calculate average time to housing allocation
allocationtimes = as.numeric(difftime(as.Date(veterandat$Exit.Date, format="%m/%d/%y"),
as.Date(veterandat$Date.Identified, format="%m/%d/%y"), units="days"))
avgallocationtime = mean(allocationtimes, na.rm = TRUE)
# Visualization
# You can use bar plots, pie charts, or any other suitable visualization
barplot(housingdests, main = "Housing Destinations for Veterans",
xlab = "Destination", ylab = "Frequency")
# Exploring housing destinations and rapidity of housing allocation for veterans.
veterandat = mcesdat[mcesdat$U.S..Military.Veteran == "Yes", ]
# Analyze housing destinations
housingdests = table(veterandat$'Entry.Exit.Destination')
# Calculate average time to housing allocation
allocationtimes = as.numeric(difftime(as.Date(veterandat$Exit.Date, format="%m/%d/%y"),
as.Date(veterandat$Date.Identified, format="%m/%d/%y"), units="days"))
avgallocationtime = mean(allocationtimes, na.rm = TRUE)
# Visualization
# You can use bar plots, pie charts, or any other suitable visualization
barplot(housingdests, main = "Housing Destinations for Veterans",
xlab = "Destination", ylab = "Frequency")
# Visualization
# You can use bar plots, pie charts, or any other suitable visualization
plot(housingdests,
main = "Housing Destinations for Veterans",
xlab = "Destination",
ylab = "Frequency")
View(veterandat)
View(veterandat)
View(destdat)
destdat$Veteran = ifelse(destdat$Veteran %in% c("Yes (HUD)", "Yes"), "Yes",
ifelse(destdat$Veteran %in% c("No (HUD)", "No"), "No", NA))
# Analyze housing destinations
housingdests = table(veterandat$'Entry.Exit.Destination')
destdat = destdat[!is.na(destdat$Veteran), ]
veteranduration = destdat[destdat$Veteran == "Yes", "Days.to.Exit.Destination"]
nonvetduration = destdat[destdat$Veteran == "No", "Days.to.Exit.Destination"]
avgdurationvets = mean(veteranduration, na.rm = TRUE)
avgdurationnonvets = mean(nonvetduration, na.rm = TRUE)
cat("Average duration for veterans:", round(avgdurationvets, 2), "days\n")
if (!all(is.na(veteranduration)) & !all(is.na(nonvetduration))) {
avgdurationvets = mean(veteranduration, na.rm = TRUE)
avgdurationnonvets = mean(nonvetduration, na.rm = TRUE)
cat("Average duration for veterans:", round(avgdurationvets, 2), "days\n")
cat("Average duration for non-veterans:", round(avgdurationnonvets, 2), "days\n")
cat("T-test p-value:", t_test_result$p.value, "\n")
} else {
cat("Not enough data to perform the analysis.")
}
# Analyze housing destinations
housingdests = table(veterandat$'Entry.Exit.Destination')
# Calculate average time to housing allocation
allocationtimes = as.numeric(difftime(as.Date(veterandat$Exit.Date, format="%m/%d/%y"),
as.Date(veterandat$Date.Identified, format="%m/%d/%y"), units="days"))
avgallocationtime = mean(allocationtimes, na.rm = TRUE)
# Visualization
# You can use bar plots, pie charts, or any other suitable visualization
plot(housingdests,
main = "Housing Destinations for Veterans",
xlab = "Destination",
ylab = "Frequency")
# Print the average time to housing allocation
cat("Average time to housing allocation for veterans:", round(avgallocationtime, 2), "days\n")
# Visualization
# You can use bar plots, pie charts, or any other suitable visualization
plot(housingdests,
main = "Housing Destinations for Veterans",
xlab = "Destination",
ylab = "Frequency")
# Visualization
# You can use bar plots, pie charts, or any other suitable visualization
barplot(housing_destinations, main = "Housing Destinations for Veterans",
xlab = "Destination", ylab = "Frequency")
# Visualization
# You can use bar plots, pie charts, or any other suitable visualization
barplot(housingdests, main = "Housing Destinations for Veterans",
xlab = "Destination", ylab = "Frequency")
text(seq_along(housingdests), housingdests + 1, labels = housingdests, col = "black", cex = 0.8)
# Analyze housing destinations
housingdests = table(veterandat$Entry.Exit.Destination)
# Calculate average time to housing allocation
allocationtimes = as.numeric(difftime(as.Date(veterandat$Exit.Date, format="%m/%d/%y"),
as.Date(veterandat$Date.Identified, format="%m/%d/%y"), units="days"))
avgallocationtime = mean(allocationtimes, na.rm = TRUE)
# Visualization
# You can use bar plots, pie charts, or any other suitable visualization
barplot(housingdests, main = "Housing Destinations for Veterans",
xlab = "Destination", ylab = "Frequency", col = "skyblue", ylim = c(0, max(housingdests) + 5))
text(seq_along(housingdests), housingdests + 1, labels = housingdests, col = "black", cex = 0.8)
View(mcesdat)
# Analyze housing destinations
veterandat = mcesdat[!is.na(mcesdat$U.S..Military.Veteran), ]
housingdests = table(veterandat$Entry.Exit.Destination)
# Calculate average time to housing allocation
allocationtimes = as.numeric(difftime(as.Date(veterandat$Exit.Date, format="%m/%d/%y"),
as.Date(veterandat$Date.Identified, format="%m/%d/%y"), units="days"))
avgallocationtime = mean(allocationtimes, na.rm = TRUE)
# Visualization
# You can use bar plots, pie charts, or any other suitable visualization
barplot(housingdests, main = "Housing Destinations for Veterans",
xlab = "Destination", ylab = "Frequency", col = "skyblue", ylim = c(0, max(housingdests) + 5))
skyblue
# Visualization
# You can use bar plots, pie charts, or any other suitable visualization
barplot(housingdests, main = "Housing Destinations for Veterans",
xlab = "Destination",
ylab = "Frequency",
ylim = c(0, max(housingdests) + 5),
col = ifelse(names(housingdests) %in% c("Deceased (HUD)",
"No exit interview completed (HUD)",
"Safe Haven (HUD)"),
c("maroon", "orange", "grey"), "lightblue"))
# Visualization
# You can use bar plots, pie charts, or any other suitable visualization
barplot(housingdests, main = "Housing Destinations for Veterans",
xlab = "Destination",
ylab = "Frequency",
ylim = c(0, max(housingdests) + 5),
col = ifelse(names(housingdests) %in% c("Deceased (HUD)",
"No exit interview completed (HUD)",
"Safe Haven (HUD)"),
c("maroon", "orange", "grey")))
# Visualization
# You can use bar plots, pie charts, or any other suitable visualization
boxplot(filtered_data$Days_to_Exit_Destination ~ filtered_data$`Entry/Exit Destination`,
main = "Housing Destinations for Veterans",
xlab = "Destination", ylab = "Days to Exit",
col = c("maroon", "orange", "grey"))
View(veterandat)
selecteddests = c("Deceased (HUD)",
"No exit interview completed (HUD)",
"Safe Haven (HUD)", " ",
"Rental by client, with ongoing housing subsidy (HUD)",
"Staying or living with family, permanent tenure (HUD)",
"Staying or living with friends, temporary tenure (e.g., room, apartment, or house) (HUD)",
"Transitional housing for homeless persons (including homeless youth) (HUD)",
"Substance abuse treatment facility or detox center (HUD)",
"Staying or living with family, temporary tenure (e.g., room, apartment, or house) (HUD)",
"Staying or living with family, permanent tenure (HUD), Residential project or halfway house with no homeless criteria (HUD)",
"Rental by client, with ongoing housing subsidy (HUD)",
"Rental by client, no ongoing housing subsidy (HUD)",
"Psychiatric hospital or other psychiatric facility (HUD)",
"Place not meant for habitation (e.g., a vehicle, an abandoned building, bus/train/subway station/airport or anywhere outside) (HUD)",
"Owned by client, with ongoing housing subsidy (HUD)",
"Other (HUD)")                   )
selecteddests = c("Deceased (HUD)",
"No exit interview completed (HUD)",
"Safe Haven (HUD)", " ",
"Rental by client, with ongoing housing subsidy (HUD)",
"Staying or living with family, permanent tenure (HUD)",
"Staying or living with friends, temporary tenure (e.g., room, apartment, or house) (HUD)",
"Transitional housing for homeless persons (including homeless youth) (HUD)",
"Substance abuse treatment facility or detox center (HUD)",
"Staying or living with family, temporary tenure (e.g., room, apartment, or house) (HUD)",
"Staying or living with family, permanent tenure (HUD), Residential project or halfway house with no homeless criteria (HUD)",
"Rental by client, with ongoing housing subsidy (HUD)",
"Rental by client, no ongoing housing subsidy (HUD)",
"Psychiatric hospital or other psychiatric facility (HUD)",
"Place not meant for habitation (e.g., a vehicle, an abandoned building, bus/train/subway station/airport or anywhere outside) (HUD)",
"Owned by client, with ongoing housing subsidy (HUD)",
"Other (HUD)")
filtereddat = veterandat[veterandat$Entry.Exit.Destination %in% selecteddests, ]
boxplot(filtereddat$Days.to.Exit.Destination ~ filtereddat$Entry.Exit.Destination,
main = "Housing Destinations for Veterans",
xlab = "Destination", ylab = "Days to Exit",
col = c("maroon", "orange", "grey"))
selecteddests = c("Deceased (HUD)",
"No exit interview completed (HUD)",
"Safe Haven (HUD)", " ",
"Rental by client, with ongoing housing subsidy (HUD)",
"Staying or living with family",
"Staying or living with friends",
"Transitional housing for homeless persons (including homeless youth) (HUD)",
"Substance abuse treatment facility or detox center (HUD)",
"Rental by client",
"Psychiatric hospital or other psychiatric facility (HUD)",
"Place not meant for habitation (e.g., a vehicle, an abandoned building, bus/train/subway station/airport or anywhere outside) (HUD)",
"Owned by client, with ongoing housing subsidy (HUD)",
"Other (HUD)")
filtereddat = veterandat[veterandat$Entry.Exit.Destination %in% selecteddests, ]
boxplot(filtereddat$Days.to.Exit.Destination ~ filtereddat$Entry.Exit.Destination,
main = "Housing Destinations for Veterans",
xlab = "Destination", ylab = "Days to Exit",
col = c("maroon", "orange", "grey"))
filtereddat = veterandat[veterandat$Entry.Exit.Destination %in% selecteddests, ]
boxplot(filtereddat$Days.to.Exit.Destination ~ filtereddat$Entry.Exit.Destination,
main = "Housing Destinations for Veterans",
xlab = "Destination", ylab = "Days to Exit",
col = c("maroon", "orange", "grey"))
plot(filtereddat$Days.to.Exit.Destination ~ filtereddat$Entry.Exit.Destination,
main = "Housing Destinations for Veterans",
xlab = "Destination", ylab = "Days to Exit",
col = c("maroon", "orange", "grey"))
plot(filtereddat$Days.to.Exit.Destination ~ filtereddat$Entry.Exit.Destination,
main = "Housing Destinations for Veterans",
xlab = "Destination",
ylab = "Days to Exit",
)
filtdat = veterandat[veterandat$Entry.Exit.Destination %in% selecteddests, ]
plot(filtdat$Days.to.Exit.Destination,
main = "Housing Destinations for Veterans",
xlab = "Destination",
ylab = "Days to Exit",
)
plot(filtdat,
main = "Housing Destinations for Veterans",
xlab = "Destination",
ylab = "Days to Exit",
)
# Visualization
# You can use bar plots, pie charts, or any other suitable visualization
plot(housingdests)
# read in datasets
mcesdat = read.csv("mces_data20231122.csv")
destdat = read.csv("destination_data20231122.csv")
surveydat = read.csv("survey_data20231122.csv")
solutionfunddat = read.csv("solutions_fund20231122.csv")
View(solutionfunddat)
View(mcesdat)

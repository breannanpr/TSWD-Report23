main = "Veterans are getting out of Homelessness by Renting",
sub = "Veteran Entry Exit Destinations, Greatest to Least"
xlab = "Count",
mtext("Entry Exit Destination", side = 2, line = 1, at = 33, las = 1, cex = 0.7)
barplot(neworderedcounts,
names.arg = names(neworderedcounts),
main = "Veterans are getting out of Homelessness by Renting",
sub = "Veteran Entry Exit Destinations by Greatest to Least"
xlab = "Count",
barplot(neworderedcounts,
names.arg = names(neworderedcounts),
main = "Veterans are getting out of Homelessness by Renting",
sub = "Veteran Entry Exit Destinations by Greatest to Least",
xlab = "Count",
ylab = "",
col = "maroon",
horiz = TRUE,
las = 1,
cex.names = 0.5,
xlim = c(0, 250))
barplot(neworderedcounts,
names.arg = names(neworderedcounts),
main = "Veterans Renting without Assistance Leading Cause to End Homelessness",
sub = "Veteran Entry Exit Destinations by Greatest to Least",
xlab = "Count",
ylab = "",
col = "maroon",
horiz = TRUE,
las = 1,
cex.names = 0.5,
xlim = c(0, 250))
mtext("Entry Exit Destination", side = 2, line = 1, at = 33, las = 1, cex = 0.7)
mtext("Entry Exit Destination", side = 2, line = 1, at = 32, las = 1, cex = 0.7)
mtext("Entry Exit Destination", side = 2, line = 1, at = 30, las = 1, cex = 0.7)
mtext("Entry Exit Destination", side = 2, line = 1, at = 31, las = 1, cex = 0.7)
par(mar = c(5, 9, 5, 9) + 0.1)
barplot(neworderedcounts,
names.arg = names(neworderedcounts),
main = "Veterans Renting without Assistance Leading Cause to End Homelessness",
sub = "Veteran Entry Exit Destinations by Greatest to Least",
xlab = "Count",
ylab = "",
col = "maroon",
horiz = TRUE,
las = 1,
cex.names = 0.5,
xlim = c(0, 250))
mtext("Entry Exit Destination", side = 2, line = 1, at = 31, las = 1, cex = 0.7)
barplot(neworderedcounts,
names.arg = names(neworderedcounts),
main = "Veterans Renting without Assistance Leading Cause to End Homelessness",
sub = "Veteran Entry Exit Destinations by Greatest to Least",
xlab = "Number of Veterans",
ylab = "",
col = "maroon",
horiz = TRUE,
las = 1,
cex.names = 0.5,
xlim = c(0, 250))
mtext("Entry Exit Destination", side = 2, line = 1, at = 31, las = 1, cex = 0.7)
# Check the unique short names
uniqueshortdestinations = unique(destdat$ShortEntryExitDestination)
shortdestcounts = table(destdat$ShortEntryExitDestination)
neworderedcounts = shortdestcounts[order(shortdestcounts)]
par(mar = c(5, 9, 5, 9) + 0.1)
barplot(neworderedcounts,
names.arg = names(neworderedcounts),
main = "Veterans Renting without Assistance Leading Cause to End Homelessness",
sub = "Veteran Entry Exit Destinations by Greatest to Least",
xlab = "Number of Veterans",
ylab = "",
col = "maroon",
horiz = TRUE,
las = 1,
cex.names = 0.5,
xlim = c(0, 250))
mtext("Entry Exit Destination", side = 2, line = 1, at = 31, las = 1, cex = 0.7)
print(table(neworderedcounts))
table(neworderedcounts)
print(uniqueshortdestinations)
# Check the unique short names
uniqueshortdestinations = unique(destdat$ShortEntryExitDestination)
shortdestcounts = table(destdat$ShortEntryExitDestination)
neworderedcounts = shortdestcounts[order(shortdestcounts)]
par(mar = c(5, 9, 5, 9) + 0.1)
barplot(neworderedcounts,
names.arg = names(neworderedcounts),
main = "Veterans Renting without Assistance Leading Cause to End Homelessness",
sub = "Veteran Entry Exit Destinations by Greatest to Least",
xlab = "Number of Veterans",
ylab = "",
col = "maroon",
horiz = TRUE,
las = 1,
cex.names = 0.5,
xlim = c(0, 250))
mtext("Entry Exit Destination", side = 2, line = 1, at = 31, las = 1, cex = 0.7)
print(table(neworderedcounts))
table(neworderedcounts)
# Replace long names with short names using the mapping
destdat$ShortEntryExitDestination = destmapping[destdat$Days.to.Exit.Destination[destdat$Veteran == "Yes (HUD)"]
# Check the unique short names
uniqueshortdestinations = unique(destdat$ShortEntryExitDestination)
shortdestcounts = table(destdat$ShortEntryExitDestination)
tabledats = table(destdat$Days.to.Exit.Destination[destdat$Veteran == "Yes (HUD)"])
print(tabledats)
View(destdat)
## Gender Data
gendertable = table(destdat$Veteran, destdat$Gender)
barplot(gendertable, beside = TRUE,
col = c("blue", "pink"),
main = "Veterans by Gender",
xlab = "Veteran", ylab = "Count",
legend.text = TRUE)
# Add legend
legend("topright", legend = rownames(gendertable), fill = c("blue", "pink"))
# Create a barplot
barplot(gendertable, beside = TRUE,
main = "Veterans by Gender",
xlab = "Veteran", ylab = "Count",
legend.text = TRUE)
# Add legend
legend("topright", legend = rownames(gendertable), fill = c("blue", "pink"))
# Create a barplot
barplot(gendertable, beside = TRUE,
main = "Veterans by Gender",
xlab = "Veteran",
ylab = "Count",
ylim = c(0,100)
legend.text = TRUE)
# Add legend
legend("topright", legend = rownames(gendertable), fill = c("blue", "pink"))
# Create a barplot
barplot(gendertable, beside = TRUE,
main = "Veterans by Gender",
xlab = "Veteran",
ylab = "Count",
ylim = c(0,100),
legend.text = TRUE)
# Add legend
legend("topright", legend = rownames(gendertable), fill = c("blue", "pink"))
## Gender Data
gendertable = table(destdat$Veteran, destdat$Gender)
print(gendertable)
## Gender Data
unique(destdat$Gender)
colorpalette = colorRampPalette(brewer.pal(12, "Set3"))(numcolors)
numcolors = length(unique(destdat$Gender))
colorpalette = colorRampPalette(brewer.pal(12, "Set3"))(numcolors)
# Create a barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veteran",
ylab = "Count",
legend.text = TRUE,
beside = FALSE,
ylim = c(0, 100))
## Gender Data
unique(destdat$Gender)
gendertable = table(destdat$Veteran, destdat$Gender)
numcolors = length(unique(destdat$Gender))
colorpalette = colorRampPalette(brewer.pal(12, "Set3"))(numcolors)
# Create a barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veteran",
ylab = "Count",
legend.text = TRUE,
beside = FALSE,
ylim = c(0, 100))
## Gender Data
install.packages("RColorBrewer")
library("RColorBrewer")
unique(destdat$Gender)
gendertable = table(destdat$Veteran, destdat$Gender)
numcolors = length(unique(destdat$Gender))
colorpalette = colorRampPalette(brewer.pal(12, "Set3"))(numcolors)
# Create a barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veteran",
ylab = "Count",
legend.text = TRUE,
beside = FALSE,
ylim = c(0, 100))
legend("topright", legend = levels(destdat$Gender), fill = colorpalette)
gendertable = table(destdat$Veteran, destdat$Gender)
numcolors = length(unique(destdat$Gender))
colorpalette = colorRampPalette(brewer.pal(12, "Set3"))(numcolors)
# Create a barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veteran",
ylab = "Count",
legend.text = TRUE,
beside = FALSE,
ylim = c(0, 100))
legend("topright", legend = levels(destdat$Gender), fill = colorpalette)
uniquegenlevels = levels(destdat$Gender)
gendertable = table(destdat$Veteran, destdat$Gender)
colorpalette = colorRampPalette(brewer.pal(12, "Set3"))(length(uniquegenlevels))
print(color_palette)
print(colorpalette)
# Create a barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veteran",
ylab = "Count",
legend.text = TRUE,
beside = FALSE,
ylim = c(0, 100))
legend("topright", legend = levels(destdat$Gender), fill = colorpalette)
legend("topright", legend = uniquegenlevels, fill = color_palette)
legend("topright", legend = uniquegenlevels, fill = colorpalette)
## Gender Data
unique(destdat$Gender)
uniquegenlevels = levels(destdat$Gender)
gendertable = table(destdat$Veteran, destdat$Gender)
colorpalette = colorRampPalette(brewer.pal(12, "Set3"))(length(uniquegenlevels))
print(colorpalette)
# Create a barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veteran",
ylab = "Count",
legend.text = TRUE,
beside = FALSE,
ylim = c(0, 100))
legend("topright", legend = uniquegenlevels, fill = colorpalette)
## Gender Data
uniquegenlevels <- unique(destdat$Gender)
print(uniquegenlevels)
colorpalette <- colorRampPalette(brewer.pal(12, "Set3"))(length(uniquegenlevels))
print(colorpalette)
# If everything looks fine, then try the legend command again
legend("topright", legend = uniquegenlevels, fill = colorpalette)
## Gender Data
# Create a table for the stacked bar chart
gendertable <- table(destdat$Veteran, destdat$Gender)
# Define color palette
colorpalette <- colorRampPalette(brewer.pal(12, "Set3"))(length(unique(destdat$Gender)))
# Create a stacked barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veteran",
ylab = "Count",
legend.text = TRUE,
beside = FALSE,
ylim = c(0, 100))
# Add legend to the top right corner
legend("topright", legend = levels(destdat$Gender), fill = colorpalette)
# Create a stacked barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veteran",
ylab = "Count",
legend.text = TRUE,
beside = FALSE,
ylim = c(0, 300))
# Add legend to the top right corner
legend("topright", legend = levels(destdat$Gender), fill = colorpalette)
# Create a stacked barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veteran",
ylab = "Count",
legend.text = TRUE,
beside = FALSE,
ylim = c(0, 600))
# Add legend to the top right corner
legend("topright", legend = levels(destdat$Gender), fill = colorpalette)
# Add legend to the top right corner
# Add legend to the top right corner
legend(x = 1, y = 200, legend = levels(destdat$Gender), fill = colorpalette)
# Create a stacked barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veterans",
ylab = "Count",
beside = FALSE,
ylim = c(0, 600))
legend(x = 1, y = 200, legend = levels(destdat$Gender), fill = colorpalette)
# Create a stacked barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veterans",
ylab = "Count",
beside = FALSE,
ylim = c(0, 1000))
# Create a stacked barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veterans",
ylab = "Count",
beside = FALSE,
ylim = c(0, 1500))
# Create a stacked barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veterans",
ylab = "Count",
beside = FALSE,
ylim = c(0, 1300))
# Create a stacked barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veterans",
ylab = "Count",
beside = FALSE,
ylim = c(0, 1300),
legend.text = uniquegenlevels,
args.legend = list(x="topright", btw = "n"))
# Create a stacked barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veterans",
ylab = "Count",
beside = FALSE,
ylim = c(0, 1300),
legend.text = uniquegenlevels,
args.legend = list(x="topright", btw = "n"))
# Create a stacked barplot
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Veterans",
ylab = "Count",
beside = FALSE,
ylim = c(0, 1300))
## Gender Data
# Filter data for veterans who answered "Yes (HUD)"
veteran_data <- destdat[destdat$Veteran == "Yes (HUD)", ]
# Create a table of counts for each combination of Gender and Entry.Exit.Destination
gendertable <- table(veteran_data$Gender, veteran_data$Entry.Exit.Destination)
# Create a barplot with legend
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender and Entry Exit Destination",
xlab = "Veteran",
ylab = "Count",
beside = FALSE,
ylim = c(0, 100),
legend.text = uniquegenlevels,
args.legend = list(x = "topright", bty = "n"))
# Add title to the legend
title(legend = uniquegenlevels, fill = colorpalette, cex.main = 0.8)
# Create a barplot with legend
# Create a barplot with legend
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender and Entry Exit Destination",
xlab = "Veteran",
ylab = "Count",
beside = FALSE,
ylim = c(0, 100),
legend.text = uniquegenlevels,
args.legend = list(title = "Gender", x = "topright", bty = "n"))
# Create a barplot with legend
# Create a barplot with legend
barplot(gendertable,
col = colorpalette,
main = "Veterans by Gender and Entry Exit Destination",
xlab = "Veteran",
ylab = "Count",
beside = FALSE,
ylim = c(0, 100),
legend.text = uniquegenlevels,
args.legend = list(title = "Gender", x = "topright", bty = "n"))
# Create a barplot with legend
# Create a barplot with legend
barplot(gendertable,
main = "Veterans by Gender and Entry Exit Destination",
xlab = "Veteran",
ylab = "Count",
beside = FALSE,
ylim = c(0, 100))
# Create a barplot with legend
# Create a barplot with legend
plot(gendertable,
main = "Veterans by Gender and Entry Exit Destination",
xlab = "Veteran",
ylab = "Count",
beside = FALSE,
ylim = c(0, 100))
## Gender Data
table_data <- table(destdat$Entry.Exit.Destination, destdat$Gender)
# Create a barplot
barplot(table_data,
col = colorpalette,
main = "Veterans by Entry Exit Destination and Gender",
xlab = "Entry Exit Destination",
ylab = "Count",
beside = TRUE,
legend.text = rownames(table_data),
args.legend = list(title = "Gender", x = "topright", bty = "n"))
## Gender Data
table_data <- table(destdat$Gender[destdat$Veteran == "Yes (HUD)"])
# Create a barplot
barplot(table_data,
col = colorpalette,
main = "Veterans by Entry Exit Destination and Gender",
xlab = "Entry Exit Destination",
ylab = "Count",
beside = TRUE,
legend.text = rownames(table_data),
args.legend = list(title = "Gender", x = "topright", bty = "n"))
## Gender Data
table_data <- table(destdat$Gender[destdat$Veteran == "Yes (HUD)"])
# Create a barplot
barplot(table_data,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Gender",
ylab = "Count",
beside = TRUE,
legend.text = rownames(table_data),
args.legend = list(title = "Gender", x = "topright", bty = "n"))
# Create a barplot
barplot(table_data,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Gender",
ylab = "Count",
legend.text = rownames(table_data),
args.legend = list(title = "Gender", x = "topright", bty = "n"))
# Create a barplot
barplot(table_data,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Gender",
ylab = "Count")
# Create a barplot
barplot(table_data,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Gender",
ylab = "Count",
ylim = c(0,250))
# Create a barplot
barplot(table_data,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Gender",
ylab = "Count",
ylim = c(0,200))
# Create a barplot
barplot(table_data,
col = colorpalette,
main = "Veterans by Gender",
xlab = "Gender",
ylab = "Count",
ylim = c(0,200))
# Create a barplot
barplot(table_data,
col = "maroon",
main = "Veterans by Gender",
xlab = "Gender",
ylab = "Count",
ylim = c(0,200))
text(rep(seq_along(table_data), each = 2), table_data + 5, labels = table_data, pos = 3, col = "black", cex = 0.8)
## Gender Data
table_data <- table(destdat$Gender[destdat$Veteran == "Yes (HUD)"])
# Create a barplot
barplot(table_data,
col = "maroon",
main = "Veterans by Gender",
xlab = "Gender",
ylab = "Count",
ylim = c(0,200))
text(rep(seq_along(table_data), each = 2), table_data + 5, labels = table_data, pos = 3, col = "black", cex = 0.8)
text(rep(seq_along(table_data), each = 1), table_data + 5, labels = table_data, pos = 3, col = "black", cex = 0.8)
barplot(table_data,
col = "maroon",
main = "Veterans by Gender",
xlab = "Gender",
ylab = "Count",
ylim = c(0,200))
text(rep(seq_along(table_data), each = 1), table_data + 5, labels = table_data, pos = 3, col = "black", cex = 0.8)
text(rep(seq_along(table_data), each = 1), table_data + 5, labels = table_data, pos = 5, col = "black", cex = 0.8)
text(rep(seq_along(table_data), each = 1), table_data + 5, labels = table_data, pos = 3, col = "black", cex = 0.8)
barplot(table_data,
col = "maroon",
main = "Veterans by Gender",
xlab = "Gender",
ylab = "Count",
ylim = c(0,200))
text(rep(seq_along(table_data), each = 1), table_data + 5, labels = table_data, pos = 3, col = "black", cex = 0.8)
## Gender Data
gentabledat = table(destdat$Gender[destdat$Veteran == "Yes (HUD)"])
# Create a barplot
barplot(gentabledat,
col = "maroon",
main = "Veterans by Gender",
xlab = "Gender",
ylab = "Count",
ylim = c(0,200))
text(rep(seq_along(table_data), each = 1), table_data + 5, labels = table_data, pos = 3, col = "black", cex = 0.8)
